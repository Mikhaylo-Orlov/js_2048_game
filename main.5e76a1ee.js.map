{"version":3,"sources":["scripts/main.js"],"names":["board","score","document","querySelector","cell","querySelectorAll","button","messageWin","messageLose","messageStart","rows","columns","directionMove","up","down","left","right","beginGame","i","r","c","id","num","updateTile","setRandom","addEventListener","handler","hasEmptyTile","findEmptyTile","Math","floor","random","tile","getElementById","innerText","classList","add","value","textContent","remove","e","code","slideLeftRight","slideUpDown","checkIsGameLoss","checkIsGameWon","tileWithoutZero","row","filter","slide","newRow","length","push","reverse","removeEventListener"],"mappings":"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","file":"main.5e76a1ee.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst score = document.querySelector('.game-score');\nconst cell = document.querySelectorAll('.field-cell');\nconst button = document.querySelector('.button');\n\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nconst rows = 4;\nconst columns = 4;\n\nconst directionMove = {\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n};\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n  }\n\n  score.textContent = '0';\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  beginGame();\n});\n\nlet board;\n\nfunction beginGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  let i = 0;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      cell[i].id = `${r}${c}`;\n\n      const num = board[r][c];\n\n      updateTile(cell[i], num);\n      i++;\n    }\n  }\n\n  setRandom();\n  setRandom();\n  document.addEventListener('keyup', handler);\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (!board[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setRandom() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let findEmptyTile = false;\n\n  while (!findEmptyTile) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = Math.random() > 0.9 ? 4 : 2;\n\n      const tile = document.getElementById(`${r}${c}`);\n\n      tile.innerText = `${board[r][c]}`;\n      tile.classList.add(`field-cell--${board[r][c]}`);\n      findEmptyTile = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add(`field-cell--${num}`);\n  }\n}\n\nconst handler = (e) => {\n  switch (e.code) {\n    case directionMove.left: {\n      slideLeftRight(true);\n      setRandom();\n\n      break;\n    }\n\n    case directionMove.right: {\n      slideLeftRight(false);\n      setRandom();\n\n      break;\n    }\n\n    case directionMove.up: {\n      slideUpDown(true);\n      setRandom();\n\n      break;\n    }\n\n    case directionMove.down: {\n      slideUpDown(false);\n      setRandom();\n\n      break;\n    }\n  }\n\n  checkIsGameLoss();\n  checkIsGameWon();\n};\n\nfunction tileWithoutZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = tileWithoutZero(row);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score.textContent = `${+score.textContent + newRow[i]}`;\n    }\n  }\n\n  newRow = tileWithoutZero(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeftRight(left) {\n  for (let i = 0; i < rows; i++) {\n    let row = board[i];\n\n    if (left) {\n      row = slide(row);\n      board[i] = row;\n    } else {\n      row.reverse();\n      row = slide(row);\n      row.reverse();\n      board[i] = row;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${i}${c}`);\n      const num = board[i][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUpDown(up) {\n  for (let c = 0; c < columns; c++) {\n    let row = [\n      board[0][c],\n      board[1][c],\n      board[2][c],\n      board[3][c],\n    ];\n\n    if (up) {\n      row = slide(row);\n    } else {\n      row.reverse();\n      row = slide(row);\n      row.reverse();\n    }\n\n    for (let r = 0; r < columns; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(`${r}${c}`);\n      const number = board[r][c];\n\n      updateTile(tile, number);\n    }\n  }\n};\n\nfunction checkIsGameLoss() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (!board[r][c]) {\n        return;\n      };\n\n      if (r !== 3 && board[r][c] === board[r + 1][c]) {\n        return;\n      };\n\n      if (c !== 3 && board[r][c] === board[r][c + 1]) {\n        return;\n      };\n\n      if (c === 3 && r === 3 && board[r][c] === board[r - 1][c]) {\n        return;\n      }\n\n      if (c === 3 && r === 3 && board[r][c] === board[r][c - 1]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n  document.removeEventListener('keyup', handler);\n}\n\nfunction checkIsGameWon() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n    }\n  }\n};\n"]}